import Head from "next/head"
import Image from "next/image"
import { Inter } from "next/font/google"
import styles from "@/styles/Home.module.css"
import {
  Box,
  Center,
  Flex,
  FormControl,
  FormLabel,
  Input,
  NumberDecrementStepper,
  NumberIncrementStepper,
  NumberInput,
  NumberInputField,
  NumberInputStepper,
  Text,
} from "@chakra-ui/react"
import { useState } from "react"
import LoanCard from "@/components/LoanCard"

const inter = Inter({ subsets: ["latin"] })

export default function Home() {
  const [loan, setLoan] = useState(500000)

  const [loanDuration1, setLoanDuration1] = useState(15)
  const [loanDuration2, setLoanDuration2] = useState(30)

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        {/* <Text>Is a 15 year mortgage better than 30 year?</Text> */}

        {/* {amortization({
          loan: 300000,
          years: loanDuration1,
          interestRate: 0.06,
        })} */}

        <FormControl>
          <FormLabel>Loan Value</FormLabel>
          <NumberInput
            value={loan}
            onChange={(_, valAsNumber) => setLoan(valAsNumber)}
            step={10000}
          >
            <NumberInputField />
            <NumberInputStepper>
              <NumberIncrementStepper />
              <NumberDecrementStepper />
            </NumberInputStepper>
          </NumberInput>
        </FormControl>

        <Flex gap={5}>
          <LoanCard years={15} onLoanYearsChange={setLoanDuration1} />

          <Center>vs.</Center>

          <LoanCard years={30} onLoanYearsChange={setLoanDuration2} />
        </Flex>

        <Flex>Loan 1</Flex>
      </main>
    </>
  )
}

function amortization({ loan, years, interestRate }) {
  let numberOfPayments = 12

  const numerator = loan * (interestRate / numberOfPayments)
  const denominator =
    1 - (1 + interestRate / numberOfPayments) ** -(numberOfPayments * years)

  const monthlyPayment = numerator * denominator

  const totalCost = years * monthlyPayment * numberOfPayments

  const interestPaid = totalCost - loan

  return monthlyPayment
}
